"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[94842],{95432:(e,a,t)=>{t.r(a),t.d(a,{comp:()=>s,data:()=>r});var n=t(9588);const o={},s=(0,t(23762).A)(o,[["render",function(e,a){const t=(0,n.g2)("RouteLink");return(0,n.uX)(),(0,n.CE)("div",null,[a[7]||(a[7]=(0,n.Lk)("h1",{id:"swann-swo-wds1pa",tabindex:"-1"},[(0,n.Lk)("a",{class:"header-anchor",href:"#swann-swo-wds1pa"},[(0,n.Lk)("span",null,"Swann SWO-WDS1PA")])],-1)),(0,n.Lk)("table",null,[a[6]||(a[6]=(0,n.Lk)("thead",null,[(0,n.Lk)("tr",null,[(0,n.Lk)("th"),(0,n.Lk)("th")])],-1)),(0,n.Lk)("tbody",null,[a[2]||(a[2]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Model"),(0,n.Lk)("td",null,"SWO-WDS1PA")],-1)),(0,n.Lk)("tr",null,[a[1]||(a[1]=(0,n.Lk)("td",null,"Vendor",-1)),(0,n.Lk)("td",null,[(0,n.bF)(t,{to:"/supported-devices/#v=Swann"},{default:(0,n.k6)(()=>[...a[0]||(a[0]=[(0,n.eW)("Swann",-1)])]),_:1})])]),a[3]||(a[3]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Description"),(0,n.Lk)("td",null,"Window/door sensor")],-1)),a[4]||(a[4]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Exposes"),(0,n.Lk)("td",null,"contact, battery_low, tamper")],-1)),a[5]||(a[5]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Picture"),(0,n.Lk)("td",null,[(0,n.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/SWO-WDS1PA.png",alt:"Swann SWO-WDS1PA"})])],-1))])]),a[8]||(a[8]=(0,n.Fv)('<h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="contact-binary" tabindex="-1"><a class="header-anchor" href="#contact-binary"><span>Contact (binary)</span></a></h3><p>Indicates if the contact is closed (= true) or open (= false). Value can be found in the published state on the <code>contact</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>false</code> contact is ON, if <code>true</code> OFF.</p><h3 id="battery-low-binary" tabindex="-1"><a class="header-anchor" href="#battery-low-binary"><span>Battery low (binary)</span></a></h3><p>Indicates if the battery of this device is almost empty. Value can be found in the published state on the <code>battery_low</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> battery low is ON, if <code>false</code> OFF.</p><h3 id="tamper-binary" tabindex="-1"><a class="header-anchor" href="#tamper-binary"><span>Tamper (binary)</span></a></h3><p>Indicates whether the device is tampered. Value can be found in the published state on the <code>tamper</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> tamper is ON, if <code>false</code> OFF.</p>',7))])}]]),r=JSON.parse('{"path":"/devices/SWO-WDS1PA.html","title":"Swann SWO-WDS1PA control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Swann SWO-WDS1PA control via MQTT","description":"Integrate your Swann SWO-WDS1PA via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2019-07-22T20:08:17.000Z"},"git":{"updatedTime":1760788693000,"contributors":[{"name":"adampaul012","username":"adampaul012","email":"74373613+adampaul012@users.noreply.github.com","commits":1,"url":"https://github.com/adampaul012"},{"name":"Koen Kanters","username":"","email":"koenkanters94@gmail.com","commits":1}],"changelog":[{"hash":"66063d2bd82db19d28933870e853300fbc63b1b4","time":1760788693000,"email":"74373613+adampaul012@users.noreply.github.com","author":"Adam Paul","message":"Adding support for Niceboy ION temperature and humidity sensor with clock (#4296)","coAuthors":[{"name":"Koen Kanters","email":"koenkanters94@gmail.com"}]}]},"filePathRelative":"devices/SWO-WDS1PA.md"}')}}]);