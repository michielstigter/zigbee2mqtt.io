"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[70776],{35556:(e,a,t)=>{t.r(a),t.d(a,{comp:()=>d,data:()=>s});var o=t(9588);const n={},d=(0,t(23762).A)(n,[["render",function(e,a){const t=(0,o.g2)("RouteLink");return(0,o.uX)(),(0,o.CE)("div",null,[a[7]||(a[7]=(0,o.Lk)("h1",{id:"dawon-dns-kb-hd100-zb",tabindex:"-1"},[(0,o.Lk)("a",{class:"header-anchor",href:"#dawon-dns-kb-hd100-zb"},[(0,o.Lk)("span",null,"Dawon DNS KB-HD100-ZB")])],-1)),(0,o.Lk)("table",null,[a[6]||(a[6]=(0,o.Lk)("thead",null,[(0,o.Lk)("tr",null,[(0,o.Lk)("th"),(0,o.Lk)("th")])],-1)),(0,o.Lk)("tbody",null,[a[2]||(a[2]=(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"Model"),(0,o.Lk)("td",null,"KB-HD100-ZB")],-1)),(0,o.Lk)("tr",null,[a[1]||(a[1]=(0,o.Lk)("td",null,"Vendor",-1)),(0,o.Lk)("td",null,[(0,o.bF)(t,{to:"/supported-devices/#v=Dawon%20DNS"},{default:(0,o.k6)(()=>[...a[0]||(a[0]=[(0,o.eW)("Dawon DNS",-1)])]),_:1})])]),a[3]||(a[3]=(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"Description"),(0,o.Lk)("td",null,"IOT Card holder")],-1)),a[4]||(a[4]=(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"Exposes"),(0,o.Lk)("td",null,"card, battery_low")],-1)),a[5]||(a[5]=(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"Picture"),(0,o.Lk)("td",null,[(0,o.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/KB-HD100-ZB.png",alt:"Dawon DNS KB-HD100-ZB"})])],-1))])]),a[8]||(a[8]=(0,o.Fv)('<h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes"><span>Notes</span></a></h2><h3 id="pairing" tabindex="-1"><a class="header-anchor" href="#pairing"><span>Pairing</span></a></h3><p>Press and hold the reset button on the device for +- 5 seconds (until the blue light starts blinking). After this the device will automatically join.</p><h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="card-binary" tabindex="-1"><a class="header-anchor" href="#card-binary"><span>Card (binary)</span></a></h3><p>Indicates if the card is inserted (= true) or not (= false). Value can be found in the published state on the <code>card</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;card&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. If value equals <code>true</code> card is ON, if <code>false</code> OFF.</p><h3 id="battery-low-binary" tabindex="-1"><a class="header-anchor" href="#battery-low-binary"><span>Battery low (binary)</span></a></h3><p>Indicates if the battery of this device is almost empty. Value can be found in the published state on the <code>battery_low</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> battery low is ON, if <code>false</code> OFF.</p>',8))])}]]),s=JSON.parse('{"path":"/devices/KB-HD100-ZB.html","title":"Dawon DNS KB-HD100-ZB control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Dawon DNS KB-HD100-ZB control via MQTT","description":"Integrate your Dawon DNS KB-HD100-ZB via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2021-12-27T12:27:11.000Z"},"git":{"updatedTime":1760788693000,"contributors":[{"name":"adampaul012","username":"adampaul012","email":"74373613+adampaul012@users.noreply.github.com","commits":1,"url":"https://github.com/adampaul012"},{"name":"Koen Kanters","username":"","email":"koenkanters94@gmail.com","commits":1}],"changelog":[{"hash":"66063d2bd82db19d28933870e853300fbc63b1b4","time":1760788693000,"email":"74373613+adampaul012@users.noreply.github.com","author":"Adam Paul","message":"Adding support for Niceboy ION temperature and humidity sensor with clock (#4296)","coAuthors":[{"name":"Koen Kanters","email":"koenkanters94@gmail.com"}]}]},"filePathRelative":"devices/KB-HD100-ZB.md"}')}}]);